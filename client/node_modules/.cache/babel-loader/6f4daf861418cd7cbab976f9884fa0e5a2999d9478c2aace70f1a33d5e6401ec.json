{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\FoodDeliveryApp\\\\client\\\\src\\\\components\\\\Register\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import the HTTP client library\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const handleRegister = async () => {\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      console.log('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/register', {\n        firstName,\n        lastName,\n        email,\n        password,\n        streetAddress,\n        city,\n        state,\n        postalCode,\n        phoneNumber\n      }); // Replace with your API endpoint\n      if (response.status === 201) {\n        // Login successful, you can perform further actions like redirecting or updating state\n        console.log('Registration successful');\n      }\n    } catch (error) {\n      // Handle login error, e.g., show an error message to the user\n      console.error('Registration error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginform\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Street Address\",\n      value: streetAddress,\n      onChange: e => setStreetAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"City\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"State\",\n      value: state,\n      onChange: e => setState(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Postal Code\",\n      value: postalCode,\n      onChange: e => setPostalCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"CYbcULvRSJxyc+/hNJzOyNxZmqY=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterForm","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","streetAddress","setStreetAddress","city","setCity","state","setState","postalCode","setPostalCode","phoneNumber","setPhoneNumber","handleRegister","alert","console","log","response","post","status","error","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/FoodDeliveryApp/client/src/components/Register/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'; // Import the HTTP client library\r\nimport './Register.css';\r\n\r\nconst RegisterForm: React.FC = () => {\r\n    const [firstName, setFirstName] = useState<string>('');\r\n    const [lastName, setLastName] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n    const [streetAddress, setStreetAddress] = useState<string>('');\r\n    const [city, setCity] = useState<string>('');\r\n    const [state, setState] = useState<string>('');\r\n    const [postalCode, setPostalCode] = useState<string>('');\r\n    const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n\r\n    const handleRegister = async () => {\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match');\r\n            console.log('Passwords do not match');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/auth/register', {\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password,\r\n                streetAddress,\r\n                city,\r\n                state,\r\n                postalCode,\r\n                phoneNumber\r\n            }); // Replace with your API endpoint\r\n            if (response.status === 201) {\r\n                // Login successful, you can perform further actions like redirecting or updating state\r\n                console.log('Registration successful');\r\n            }\r\n        } catch (error) {\r\n            // Handle login error, e.g., show an error message to the user\r\n            console.error('Registration error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='loginform'>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Street Address\"\r\n                value={streetAddress}\r\n                onChange={(e) => setStreetAddress(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                value={state}\r\n                onChange={(e) => setState(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Postal Code\"\r\n                value={postalCode}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Phone Number\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n            <button onClick={handleRegister}>Login</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}